<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<style>
/* CSS adapt√© pour data-table-collect */
#data-table-wrapper table#data-table-collect {
    width: 100%;
    table-layout: auto;
    border-collapse: collapse;
}
#data-table-wrapper table#data-table-collect th,
#data-table-wrapper table#data-table-collect td {
    padding: 8px 12px;
    border: 1px solid #ddd;
    white-space: nowrap;
    text-align: left;
}
#data-table-wrapper table#data-table-collect th:first-child,
#data-table-wrapper table#data-table-collect td:first-child {
    width: 40px;
    text-align: center;
}
#data-table-wrapper table#data-table-collect th:nth-last-child(-n+3),
#data-table-wrapper table#data-table-collect td:nth-last-child(-n+3) {
    width: 50px;
    text-align: center;
}

/* Am√©liorations des r√®gles CSS pour les fl√®ches de tri de DataTables */
/* Elles devraient forcer l'affichage si le CSS par d√©faut de DataTables est manquant ou √©cras√©. */
#data-table-collect thead th.sorting:after,
#data-table-collect thead th.sorting_asc:after,
#data-table-collect thead th.sorting_desc:after {
    font-family: 'Arial Unicode MS', 'Liberation Sans', sans-serif; /* Police qui supporte les symboles Unicode */
    margin-left: 0.5em; /* Un peu d'espace entre le texte et la fl√®che */
    vertical-align: middle; /* Alignement vertical */
}
</style>


<div id="data-table-wrapper" class="sticky-wrapper">
    <table id="data-table-collect" class="display">
        <thead>
            <tr>
                <th><input type="checkbox" id="select-all" /></th> {# Checkbox pour tout s√©lectionner (optionnel) #}
                <th data-column="id">ID</th>
                <th data-column="name">Name</th>
                <th data-column="description">Description</th>
                <th data-column="comment">Comments</th>
                <th data-column="duplicate" class="no-sort"></th> {# Ajout de classe pour d√©sactiver le tri #}
                <th data-column="edit" class="no-sort"></th> {# Ajout de classe pour d√©sactiver le tri #}
                <th data-column="delete" class="no-sort"></th> {# Ajout de classe pour d√©sactiver le tri #}
            </tr>
        </thead>
        <tbody>
            {% if collecs is empty %}
                <tr>
                    <td colspan="8" class="no-data">No collections found.</td>
                </tr>
            {% else %}
                {% for collec in collecs %}
                    <tr class="list-collec">
                        <td>
                            <input type="checkbox" name="selected_collecs[]" value="{{ collec.id }}" class="select-checkbox" />
                        </td>
                        <td class="id">{{ collec.id }}</td>
                        <td class="name">{{ collec.name is not null ? collec.name : '--' }}</td>
                        <td class="description">{{ collec.description is not null ? collec.description : '--' }}</td>
                        <td class="comment">{{ collec.comment is not null ? collec.comment : '--' }}</td>
                        <td><a href = "{{path("duplicate_collec", {id: collec.id})}}"> Duplicate </a></td>
                        <td><a href = "{{path("edit_collec", {id: collec.id})}}"> Modifie </a></td>
                        <td><a href = "{{path("delete_collec", {id: collec.id})}}" class="delete-link"> Delete </a></td>
                    </tr>
                {% endfor %}
            {% endif %}
        </tbody>
    </table>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

<script>
function initDataTableWithFilters(tableId) {
    const table = $('#' + tableId);
    const totalColumns = table.find('thead th').length;

    // Ajout d'une ligne de filtres sous le header (si pas d√©j√† fait)
    if (table.find('thead tr.filters').length === 0) {
        const filterRow = $('<tr class="filters"></tr>').appendTo(table.find('thead'));
        table.find('thead th').each(function(index) {
            // Ne pas ajouter d'input pour la 1√®re colonne (checkbox) ou les 3 derni√®res colonnes
            if ($(this).find('input[type=checkbox]').length > 0 || index >= totalColumns - 3) {
                filterRow.append('<th></th>');
            } else {
                filterRow.append('<th><input type="text" placeholder="Filtrer" style="width: 100%; box-sizing: border-box;" /></th>');
            }
        });
    }

    const dataTable = table.DataTable({
        orderCellsTop: true,
        fixedHeader: true,
        paging: true,
        searching: true,
        info: true,
        lengthChange: true,
        language: {
            url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json"
        },
        columnDefs: [
            // D√©sactive le tri pour la premi√®re colonne et les 3 derni√®res
            { orderable: false, targets: [0, -1, -2, -3] }
        ]
    });

    // Applique le filtre sur chaque colonne (si input pr√©sent)
    table.find('thead tr.filters input').on('keyup change clear', function() {
        const colIndex = $(this).parent().index();

        // Debug console : v√©rifie index et valeur entr√©e
        console.log("üîç Filtrage sur colonne index =", colIndex, "avec valeur =", this.value);

        // Applique la recherche avec DataTables
        dataTable.column(colIndex).search(this.value).draw();

        // Debug console : nombre de lignes apr√®s filtrage
        console.log("üìä Nombre de lignes affich√©es apr√®s filtre :", dataTable.rows({ filter: 'applied' }).count());
    });

    // Gestion de la checkbox "Tout s√©lectionner"
    $('#select-all').on('click', function() {
        const isChecked = $(this).prop('checked');
        table.find('tbody input.select-checkbox').prop('checked', isChecked);
    });

    // Synchronisation des checkboxes individuelles avec "Tout s√©lectionner"
    table.find('tbody').on('change', 'input.select-checkbox', function() {
        const allChecked = table.find('tbody input.select-checkbox').length === table.find('tbody input.select-checkbox:checked').length;
        $('#select-all').prop('checked', allChecked);
    });

    // Gestion du menu de colonnes masqu√©es/visibles (si checkboxes pr√©sentes)
    document.querySelectorAll('.toggle-column').forEach(function(checkbox) {
        checkbox.addEventListener('change', function() {
            const colIndex = parseInt(this.getAttribute('data-column'), 10);
            const col = dataTable.column(colIndex);
            col.visible(this.checked);
        });
    });
}

document.addEventListener('DOMContentLoaded', function() {
    initDataTableWithFilters('data-table-collect');
});
</script>
