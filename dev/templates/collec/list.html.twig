<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<form id="multi-action-form" method="post">
    
    <div id="data-table-wrapper" class="sticky-wrapper">
        <table id="data-table-collect" class="display datatableComponent" style="visibility: hidden;"> {# masquer pour evider le flash#}
            <thead>
                <tr>
                    <th><input type="checkbox" id="select-all" class="no-sort"/></th>
                    <th data-column="id">ID</th>
                    <th data-column="name">Name</th>
                    <th data-column="description">Description</th>
                    <th data-column="comment">Comments</th>
                    <th data-column="duplicate" class="no-sort"></th>
                    <th data-column="edit" class="no-sort"></th>
                    <th data-column="delete" class="no-sort"></th>
                </tr>
            </thead>
            <tbody>
                {% if collecs is empty %}
                    <tr>
                        <td colspan="8" class="no-data">No collections found.</td>
                    </tr>
                {% else %}
                    {% for collec in collecs %}
                        <tr class="list-collec">
                            <td>
                                <input type="checkbox" name="selected_collecs[]" value="{{ collec.id }}" class="select-checkbox" />
                            </td>
                            <td class="id">{{ collec.id }}</td>
                            <td class="name">{{ collec.name is not null ? collec.name : '--' }}</td>
                            <td class="description" 
                                data-info='{{ collec.description ? collec.description : '--'}}'
                            >
                                {% if collec.description is not null %}
                                    {% set description = collec.description ?: collec.description %}
                                    {% set maxLength = 10 %}

                                    {% if description|length > maxLength %}
                                        {% set prefix = description|slice(0, 8) %}
                                        {{ prefix ~ '...'}}
                                    {% else %}
                                        {{ description }}
                                    {% endif %} <br>
                                {% else %}
                                    --
                                {% endif %}
                            </td>
                            <td class="comment" 
                                data-info='{{ collec.comment ? collec.comment : '--'}}'
                            >
                                {% if collec.comment is not null %}
                                    {% set comment = collec.comment ?: collec.comment %}
                                    {% set maxLength = 10 %}

                                    {% if comment|length > maxLength %}
                                        {% set prefix = comment|slice(0, 8) %}
                                        {{ prefix ~ '...'}}
                                    {% else %}
                                        {{ comment }}
                                    {% endif %} <br>
                                {% else %}
                                    --
                                {% endif %}
                            </td>
                            <td><a href="{{ path('duplicate_collec', {id: collec.id}) }}">Duplicate</a></td>
                            <td><a href="{{ path('edit_collec', {id: collec.id}) }}">Modifie</a></td>
                            <td>
                                <a href="{{ path('delete_collec', {id: collec.id}) }}"
                                    class="delete-link"
                                    onclick="return confirm('Voulez-vous vraiment supprimer cette collection ?');">
                                    Delete
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                {% endif %}
            </tbody>
        </table>
    </div>

    <input type="hidden" name="action" value="" />

    <button id="btn-delete-multiple" type="submit" formaction="{{ path('delete_multiple_collecs') }}" onclick="this.form.action.value='delete'" class="btn btn-danger" style="margin-top: 10px; display: none;">
        Suppression multiple
    </button>
</form>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

{% if app.session.flashbag.has('warning') %}
    <script>
        // Sélectionner tous les liens de suppression
        document.querySelectorAll('.delete-link').forEach(function(link) {
            link.addEventListener('click', function(e) {
                e.preventDefault(); // Empêcher la redirection initiale

                // Afficher la confirmation si le flash warning existe
                var confirmDelete = confirm("{{ app.session.flashbag.get('warning')[0] }}");

                // Si l'utilisateur confirme, ajouter ?confirm=yes à l'URL et rediriger
                if (confirmDelete) {
                    // Redirection vers la suppression avec confirmation
                    window.location.href = this.href + '?confirm=yes';
                }
            });
        });
    </script>
{% endif %}


<script>
    function initDataTableWithFilters(tableId) {
        const table = $('#' + tableId);
        const totalColumns = table.find('thead th').length;

        // Ajout d'une ligne de filtres sous le header (si pas déjà fait)
        if (table.find('thead tr.filters').length === 0) {
            const filterRow = $('<tr class="filters"></tr>').appendTo(table.find('thead'));
            table.find('thead th').each(function(index) {
                // Ne pas ajouter d'input pour la 1ère colonne (checkbox) ou les 3 dernières colonnes
                if ($(this).find('input[type=checkbox]').length > 0 || index >= totalColumns - 3) {
                    filterRow.append('<th></th>');
                } else {
                    filterRow.append('<th><input type="text" placeholder="Filtrer" style="width: 100%; box-sizing: border-box;" /></th>');
                }
            });
        }

        const dataTable = table.DataTable({
            orderCellsTop: true,
            fixedHeader: true,
            paging: true,
            searching: true,
            info: true,
            lengthChange: true,
            language: {
                url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json"
            },
            columnDefs: [
                // Désactive le tri pour la première colonne et les 3 dernières en class no-sort
                { orderable: false, targets: 'no-sort' }
            ],
            // Affiche la table uniquement quand DataTables est complètement initialisé
            initComplete: function() {
                table.css('visibility', 'visible');
                $('#btn-delete-multiple').show(); // Affiche le bouton
            }
        });

        // Applique le filtre sur chaque colonne (si input présent)
        table.find('thead tr.filters input').on('keyup change clear', function() {
            const colIndex = $(this).parent().index();
            dataTable.column(colIndex).search(this.value).draw();
        });

        // Gestion de la checkbox "Tout sélectionner"
        $('#select-all').on('click', function() {
            const isChecked = $(this).prop('checked');
            table.find('tbody input.select-checkbox').prop('checked', isChecked);
        });

        // Synchronisation des checkboxes individuelles avec "Tout sélectionner"
        table.find('tbody').on('change', 'input.select-checkbox', function() {
            const allChecked = table.find('tbody input.select-checkbox').length === table.find('tbody input.select-checkbox:checked').length;
            $('#select-all').prop('checked', allChecked);
        });

        // Gestion du menu de colonnes masquées/visibles (si checkboxes présentes)
        document.querySelectorAll('.toggle-column').forEach(function(checkbox) {
            checkbox.addEventListener('change', function() {
                const colIndex = parseInt(this.getAttribute('data-column'), 10);
                const col = dataTable.column(colIndex);
                col.visible(this.checked);
            });
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        initDataTableWithFilters('data-table-collect');
    });
</script>
